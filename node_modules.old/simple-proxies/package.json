{
  "name": "simple-proxies",
  "version": "0.1.8",
  "author": {
    "name": "Christophe Lombart",
    "email": "christophe.lombart@gmail.com"
  },
  "description": "A command line tool for managing proxies & a nodejs component to used them in your own application",
  "repository": {
    "type": "git",
    "url": "https://github.com/christophebe/simple-proxies.git"
  },
  "bin": {
    "px": "./bin/px.js"
  },
  "dependencies": {
    "async": "*",
    "inquirer": "^0.8.2",
    "mongodb": "*",
    "net-ping": "*",
    "request": "*",
    "underscore": "*",
    "winston": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "expect": "*"
  },
  "keywords": [
    "proxies",
    "proxy management",
    "http",
    "proxy http"
  ],
  "license": "MIT",
  "readme": "This project aims to solve 2 problems\r\n- **A command line tool for managing proxies** from a file or a db. Currently, basic commands are provided to check & import proxies. We plan to add more commands.\r\n- A **nodejs component** for using proxies in your apps.\r\n\r\nBasic ! but do the job !\r\n\r\n\r\n## Install\r\n\r\nIn order to use the command line :\r\n```\r\nnpm install simple-proxies -g\r\n```\r\n\r\nIn order to use the component inside your nodejs app :\r\n```\r\nnpm install simple-proxies --save\r\n```\r\n\r\n##Structure of the txt proxy file\r\n\r\nEach line of the file should respect the one of following structure :  \r\n- host:port:username:password\r\n- host:port\r\n- comment with #\r\n- blank line\r\n\r\n\r\n## Command Line Tools\r\n\r\n### Check proxies that are in a text file\r\nIf you want to check if the proxies are valid, run the following command :\r\n```\r\npx fcheck\r\n```\r\nThis command will ask you the location of the file to check (default : ./proxies.txt)\r\n\r\n### Import proxies in a db from a file\r\n```\r\npx dimport\r\n```\r\nCurrently, we are supporting MongoDB & Riak.\r\nThis command will ask your the DB connexion infos & the file to used.\r\n\r\n### Check proxies that are in a db\r\n```\r\npx dcheck\r\n```\r\nThis command will ask your the DB connexion infos\r\n\r\n\r\n\r\n## Using proxies in your own app\r\n\r\nThis package provides a simple API for using HTTP proxies in a NodeJS application. For example, when you make many HTTP requests (specially in the SEO world ;-)), you need to make them through a group of proxies.\r\nThe goal of this package is to simplify your code for managing a list of proxies.  \r\n\r\nThere are 3 components :\r\n* ProxyFileLoader : load proxies from a txt file & store them into JS objects. This component can also import the different proxies into a DB.\r\n* ProxyDBLoader : load proxies from a DB & store them into JS Objects.\r\n* ProxyChecker : check if proxies are valid & not banned by Google.\r\n\r\n\r\n\r\n### An example with Request\r\n\r\n\r\n```javascript\r\nvar proxyLoader = require(\"simple-proxies/lib/proxyfileloader\");\r\nvar request = require(\"request\");\r\n\r\n// Change the config if you want to use a specific txt file\r\n// This is not necessary if you plan to use proxies.txt on the current folder\r\nvar config = proxyLoader.config().setProxyFile(\"yourfile.txt\");\r\n\r\nproxyLoader.loadProxyFile(config, function(error, proxyList) {\r\n  if (error) {\r\n    console.log(error);\r\n  }\r\n  else {\r\n     // Make a request with one proxy\r\n     request.get({\r\n         uri:'http://www.google.com',\r\n         proxy : proxyList.getProxy().getUrl()\r\n     });\r\n  }\r\n\r\n});\r\n\r\n\r\n ```\r\n\r\n\r\n### API\r\n#### Load the default proxy file\r\n```javascript\r\nvar proxyLoader = require(\"simple-proxies/lib/proxyfileloader\");\r\nproxyLoader.loadDefaultProxies(function(error, proxyList){  \r\n    var proxies = proxyList.getProxies();\r\n});\r\n ```\r\n\r\nBy default, the list of proxies are in a file called proxies.txt and it should be in the root folder of your project.\r\n\r\n\r\n#### Read proxies from a specific txt file\r\n```javascript\r\nvar proxyLoader = require(\"simple-proxies/lib/proxyfileloader\");\r\nvar config = proxies.config().setProxyFile(\"filename.txt\").setCheckProxies(false);\r\n\r\nproxyLoader.loadProxyFile(config, function(error, proxyList) {\r\n\r\n});\r\n ```\r\n\r\nThe config can be used to personalize how the proxies has to be managed. See FileConfig in model.js to get all options.\r\n\r\n#### Read proxies from the database\r\n\r\n```javascript\r\nvar dbLoader = require(\"simple-proxies/lib/proxydbloader\");\r\nvar dbStore = require(\"./lib/mongoDBStore\");\r\nvar pm = new dbStore.MongoDBProxyStore({\"url\" : \"mongodb://127.0.0.1:27017/seo\", \"collection\" : \"proxies\"});\r\n\r\nvar config = dbLoader.config().setPm(pm);\r\ndbLoader.loadProxies(config, function(error, proxyList) {\r\n     console.log(proxies.getNumberOfProxies());\r\n     pm.close();\r\n\r\n});\r\n\r\n ```\r\n\r\nThe config can be used to personalize how the proxies has to be managed. See PmConfig in model.js to get all options.\r\n#### The object model\r\n\r\nAfter loading the proxies from a file or from a db, you receive a **ProxyList** object which contains an array of Proxy objects.\r\n\r\n\r\n**Get all Proxies**\r\n```javascript\r\nvar proxies = proxyList.getProxies();\r\nproxies.forEach(function(proxy) { ... });\r\n ```\r\nreturn an array of proxies : {host, port, valid, userName, password}\r\n\r\n\r\n**Get one proxy**\r\n```javascript\r\n\tvar proxy = proxyList.getProxy();\r\n\r\n\tconsole.log(proxy.getUrl()); //return the complete URL of the proxy : http://username:pwd@host:port\r\n\tconsole.log(proxy.userName);\r\n\tconsole.log(proxy.password);\r\n\tconsole.log(proxy.host);\r\n\tconsole.log(proxy.port);\r\n\tconsole.log(proxy.valid);\r\n\r\n ```\r\n\r\nThis method loops on the proxy list on each call.\r\n\r\nSee the model.js to get a complete overview of the API provided by this model.\r\n\r\n\r\n#### Check the proxies\r\n\r\nAnywhere in your code or in a cron, you can check if the proxies are still valid by using the proxy checker.\r\nThis component uses a ProxyList to make the check.\r\n\r\n```javascript\r\nvar checker = require(\"simple-proxies/lib/proxychecker\");\r\n\r\nvar config = checker.config().setGoogleAdress(\"http://www.google.be\");\r\nchecker.checkAllProxies(proxyList, config, function(error) {\r\n    //the proxies in proxyList should be updated (valid or not valid)\r\n\r\n});\r\n\r\n ```\r\nThe config can be used to personalize how the proxies has to be checked. See CheckConfig in model.js to get all options.\r\n",
  "readmeFilename": "README.md",
  "gitHead": "75d0323d3ad03db6c4ab0cb6c18354a527faabcd",
  "bugs": {
    "url": "https://github.com/christophebe/simple-proxies/issues"
  },
  "homepage": "https://github.com/christophebe/simple-proxies",
  "_id": "simple-proxies@0.1.8",
  "scripts": {},
  "_shasum": "73f38670b160848e59ba889d0316a9c97d6b9162",
  "_from": "simple-proxies@*"
}
